age=15
name="kalash"
print("my name is",name,"I am",age,"years")
# f string
print(f"Age is:{age},Name is :{name}")
#format function
print("Age is:{},Name is :{}".format(age,name))
n1=234.67128
print(f"The number is:{n1.2f})
_________________________________________________________________________
a="hello"
b="python"
print(a,b,sep='#')
print(a,end=' ')
print(b,end=' ')
__________________________________________________________________________
"""
import math
r=float(input("enter the radius:"))
area = math.pi*r*r
circumference=2*math.pi*r
print("area of circle is:",area)
print("circumferemce of circle is",circumference)
"""


"""
#it will give all the keywords

import keyword
keyword.kwlist
"""


'''
_a  ----->protected variable
__a ----->private variable
__aaa__  -----> magic variable 
'''

downloadpython latest version
open file location 
type cmd

pip install jupyter
jupyter notebook

######################################
id()
function used to memory location
#####################


http://localhost:8888/notebooks/kalash.ipynb#


_____________________________________________________________________________________________________________________________________________________________
a=15
x=101
y=0b101 # binary number put 0b or 0B   at the time of printing decimal number will print 
z=0b111111111111111
'''
c=0n122332 # shows an error
'''
d=0o0123 # octal number put 0o or 0O   at the time of printing decimal number will print 
#0o786 gives an error
print(d)

e=0xFACE ## hexadecimal number put 0x or 0X   at the time of printing decimal number will print 
#0xDEAR shows an error
print(e)

------------------------------------------------------------------------------------------



# float
a=23.45
# b=0b23.45
# c=0o23.45
# d=0x23.45
# print(c,d)
print(a)
b=1.2e3  # 1.2 x 10^3
print(b)
# float data eype can only be represented in decimal number
#floating value can be represented by using exponential form

__________________________________________________________________________________________________________________________________
# in python a+bj is a complex number where  a is real part and j is imaginary part because in python it has no right to use i

a=2+3j
print(a)
print(type(a))
# x=2+j3
# print(x)  shows an error j always uses as a suffix
________________________________________________________________________________________________________________________________

# a=2+3j
# x=0b11+0b01j
# y=0o11+0o01j
# z=0x11+0x01j
# b=0xFACE+0x01Aj
# c=0x1F+0x0Aj
# print(x,y,z,b,c)

# all will shows an error as imaginary part can be represented only in decimal sysyem


x=3j
y=3+0j
print(x)
print(y)
print(type(y))
________________________________________________________________________________________________________________________________
x=2.3+4.5j
print(x)

# complex numberusing float
_______________________________________________________________________________________________________________________________
# 1-> attribute to find real :real
#2->imag:attribute to find imaginary part
x=2.3+4j
print(x.real)
print(x.imag)
_______________________________________________________________________________________________________________________________________
#type conversion functions


# bin()conversion of decimal to binary
# hex()conversion of decimal to hexadecimal
# oct()conversion of decimal to octal

# ord() equivalent character
# chr()equivalent askii

int(True)
#int(None) #invalid
float(False)



complex("10","12") or complex("4.5",19)
complex("10","12")
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[16], line 1
----> 1 complex("10","12")

TypeError: complex() can't take second arg if first is a string

_____________________________--------_______________________________-
nool(None)
False






bool(" 0")#true
bool("0")#true
bool(0)#false


_________________________________________________________________________________
chr(65)
'A'
chr(90)
'Z'
a
ord("a")
97
ord("z")
122
0
ord(0)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In[24], line 1
----> 1 ord(0)

TypeError: ord() expected string of length 1, but int found

0
ord("0")
48
9
ord("9")
57
A
bool('a'>'A')
True


_______________________________________________________________________________________

my_set={1,2,3}  #set
my_frozenset=frozenset([1,2,3]) # frozenset
print(my_set,type(my_set))
print(my_frozenset,type(my_frozenset))


{1, 2, 3} <class 'set'>
frozenset({1, 2, 3}) <class 'frozenset'>





#byte datatype



__________________________________________________________________________________________________________________________


# ###################  bitwise operation

a=5
b=3
bit_and=a&b
bit_or=a|b
bit_xor=a^b
bit_not=~a
bit_left_shift=a<<1
bit_right_shift=a>>1
print(bit_and,bit_or,bit_xor,bit_not,bit_left_shift,bit_right_shift)

1 7 6 -6 10 2


____________________________________________________________________________________________________________________________
####################       ASSIGNMENT OPERATOR     ######################################
a=8
# a+=3
# a-=3
# a*=3
# a/=3
# a%=3
# a//=3
# a**=3
print(a)



